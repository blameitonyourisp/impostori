"use strict";require("process"),require("readline");var e=require("fs"),t=require("path"),n=require("url"),r="undefined"!=typeof document?document.currentScript:null;class s extends Error{constructor(e){super();let t="";for(const n in e)switch(n){case"name":this.name=e[n];break;case"message":t=`${e[n]}\n${t}`;break;default:{const r=`${n}: ${e[n]}`;t=`${t}${o(r,"gray",1)}\n`}}this.message=t||""}}const a=(e,{modifiers:t=[],tabs:n=0,tabSize:r=4}={})=>{let s="";for(const e of t)s=`${s}${e}`;const a=i.decorations.reset;return`${s}${" ".repeat(n*r)}${e}${a}`},o=(e,t,n=0)=>{const r=i.fgColors[t];return a(e,r?{modifiers:[r],tabs:n}:{tabs:n})},i={fgColors:{black:"[30m",red:"[31m",green:"[32m",yellow:"[33m",blue:"[34m",magenta:"[35m",cyan:"[36m",white:"[37m",gray:"[90m"},bgColors:{black:"[40m",red:"[41m",green:"[42m",yellow:"[43m",blue:"[44m",magenta:"[45m",cyan:"[46m",white:"[47m",gray:"[100m"},decorations:{reset:"[0m",bright:"[1m",dim:"[2m",underline:"[4m",blink:"[5m",reverse:"[7m",hidden:"[8m"}},d="",l="worker",c="imposter",p="vacant",u=({upper:e=1/0,lower:t=-1/0,mean:n=0,stdDev:r=1,precision:s=5,mode:a=l}={})=>{switch(e=(e-n)/r,t=(t-n)/r,s=Math.min(Math.max(s,1),100),a){case c:const n=u({upper:e,precision:s+1}),r=u({upper:t,precision:s+1});return parseFloat((n-r).toPrecision(s));case p:const a=1-u({upper:e,lower:t,mode:c,precision:s});return parseFloat(a.toPrecision(s));case d:const o=1-u({upper:t,precision:s});return parseFloat(o.toPrecision(s));default:if(e===1/0)return 1;if(e===-1/0)return 0;let[i,l]=[0,1],[f,h]=[0,0];for(;i.toPrecision(s)!==l.toPrecision(s);){let t=1;for(let e=0;e<h;e++)t*=e+1;f+=(-1)**h*e**(2*h+1)/((2*h+1)*2**h*t),i=l,l=.5+1/Math.sqrt(2*Math.PI)*f,h++}return parseFloat(l.toPrecision(s))}};class f{constructor(e=f.seed(),t=34319,n=89459){e%t!=0&&e%n!=0||e++,this.config={seed:e,primeP:t,primeQ:n,divisor:t*n},this.state={iteration:0,iteratedSeed:e}}iterate(){return this.state.iteration++,this.state.iteratedSeed=this.state.iteratedSeed**2%this.config.divisor,this.state.iteratedSeed/this.config.divisor}jump(e){for(let t=0;t<e-1;t++)this.iterate();return this.iterate()}jumpRandom(e=10,t=100){return this.jump(this.prng(e,t)-1)}prng(e=0,t=1){return f.floatToRangedInteger(this.iterate(),e,t)}shuffleArray([...e]){return Array.from({length:e.length},(()=>e.splice(this.prng(0,e.length-1),1)[0]))}shuffledIndexArray(e,t=!1){return this.shuffleArray(Array.from({length:e},((e,n)=>n+t)))}static seed(){return f.floatToRangedInteger(Math.random(),2**31,2**32-1)}static floatToRangedInteger(e,t,n){return Math.round(t+e*(n-t))}}class h{#e;#t;#n;#r;#s;constructor({length:e=16,size:t=Math.floor(6*e/8),buffer:n=new ArrayBuffer(t)}={}){this.#e=n,this.#t=0,this.#n=0,this.#r=0,this.#s=0}write(e,{size:t=h.#a(e),offset:n=this.#r,signed:r=!1}={}){return this.#o().append(e,{size:t,offset:n,signed:r}).isWriteable?this.#i(e,{size:t,offset:n,signed:r}):NaN}writeAbsolute(e,{offset:t=this.#r,signed:n=!1}={}){const r={value:h.#a(e)-1,size:5};if(!this.#o().append(r.value,{...r,offset:t}).append(e,{signed:n}).isWriteable)return NaN;this.#i(r.value,{...r,offset:t});return this.#i(e,{signed:n})}writeRelative(e,{offset:t=this.#r,signed:n=!1}={}){0===e&&(e=1);const r=h.#a(e)-this.#s,s={value:r>0?1<<r>>>0:0,size:Math.abs(r)+1};if(!this.#o().append(s.value,{...s,offset:t}).append(e,{signed:n}).isWriteable)return NaN;this.#i(s.value,{...s,offset:t});return this.#i(e,{signed:n})}writeString(e,{offset:t=this.#r}={}){const n={value:h.#a(e.length),size:5};let r=this.#o().append(n.value,{...n}).append(e.length);for(let t=0;t<e.length;t++)r=r.append(0,{size:8});if(!r.isWriteable)return"";this.#i(n.value,{...n,offset:t}),this.#i(e.length);for(const t of e)this.#i(t.charCodeAt(0),{size:8});return e}read(e,{offset:t=this.#t,signed:n=!1}={}){return this.#d().append(e,{offset:t,signed:n}).isReadable?this.#l(e,{offset:t,signed:n}):NaN}readAbsolute({offset:e=this.#t,signed:t=!1}={}){const n=this.#t,r=this.#n,s=this.#d().append(5,{offset:e});let a=0;return s.isReadable&&(a=this.#l(5,{offset:e})+1,s.append(a,{signed:t})),s.isReadable&&a?this.#l(a,{signed:t}):(this.#t=n,this.#n=r,NaN)}readRelative({offset:e=this.#t,signed:t=!1}={}){const n=this.#t,r=this.#n;let s=1;const a=this.#d().append(1,{offset:e});a.isReadable&&(s=this.#l(1,{offset:e})?1:-1);let o=0;for(;a.append(1).isReadable&&!this.#l(1);)o++;const i=r+s*o;return a.append(i,{signed:t}),a.isReadable&&i?(this.#t--,this.#l(i,{signed:t})):(this.#t=n,this.#n=r,NaN)}readString({offset:e=this.#t}={}){const t=this.#t,n=this.#n,r=this.#d().append(5,{offset:e});let s=0;r.isReadable&&(s=this.#l(5,{offset:e})),r.append(s);let a=0;if(r.isReadable&&(a=this.#l(s)),!r.isReadable||!a)return this.#t=t,this.#n=n,"";let o="";for(let e=0;e<a;e++){if(r.append(8),!r.isReadable)return this.#t=t,this.#n=n,"";o+=String.fromCharCode(this.#l(8))}return o}copy({target:e,targetStart:t=e?.writePointer||0,sourceStart:n=0,sourceEnd:r=this.bitLength}={}){if(n<0||r>this.bitLength)throw new s({name:"BitBufferError",message:"Requested bits out of source buffer range","source-start":n,"source-end":r,"source-bit-length":this.bitLength});const a=r-n,o=Math.ceil((a+t)/8);e??=new h({size:o});const i=e.bitLength-t;if(a>i)throw new s({name:"BitBufferError",message:"Source bits exceed bits available in target buffer","source-bits":a,"target-bits":i});for(let r=0;r<a;r++)e.write(this.#l(1,{offset:n+r}),{size:1,offset:t+r});return e}toString(){let e="",t=0,n=0;const r=new Uint8Array(this.#e);for(let s=0;s<3*Math.ceil(this.byteLength/3);s++){n=(n|(r[s]||0)<<16-8*t)>>>0,t=++t%3,t||(e+=h.#c(n),n=0)}return e}#o(){const e={writeable:!0,offset:this.#r},t=(n,{size:r=h.#a(n),offset:s=e.offset,signed:a=!1}={})=>{if(e.writeable){const t=Math.abs(n),o=this.bitLength-s;e.writeable=!(!a&&n<0)&&(!(h.#a(t)>r)&&(!!Number.isInteger(t)&&(!(r<0||r>32)&&!(r+(a?1:0)>o))))}return e.offset+=r,{append:t,get isWriteable(){return e.writeable}}};return{append:t,get isWriteable(){return e.writeable}}}#i(e,{size:t=h.#a(e),offset:n=this.#r,signed:r=!1}={}){const s=Math.abs(e),{view:a,byteLength:o,subBit:i}=this.#p(t,n);for(let e=0;e<o;e++){const n=a.getUint8(e);let r=0;for(let a=0;a<8;a++){const o=8*e+a;r|=(o<i||o>i+t?n<<24+a>>>31:s<<32-t+(o-i)>>>31)<<7-a}a.setUint8(e,r)}return this.#r=n+t,r&&this.#i(e>=0?1:0,{size:1}),this.#s=t,e}#d(){const e={readable:!0,offset:this.#t},t=(n,{offset:r=e.offset,signed:s=!1}={})=>{if(e.readable){const t=this.bitLength-r;e.readable=!(n<0||n>32)&&!(n+(s?1:0)>t)}return e.offset+=n,{append:t,get isReadable(){return e.readable}}};return{append:t,get isReadable(){return e.readable}}}#l(e,{offset:t=this.#t,signed:n=!1}={}){const{view:r,byteLength:s,subBit:a}=this.#p(e,t);let o=0;for(let e=0;e<s;e++){const t=24+a-8*e;o=t>=0?(o|r.getUint8(e)<<t)>>>0:(o|r.getUint8(e)>>>-t)>>>0}this.#t=t+e;const i=n&&0===this.#l(1)?-1:1;return this.#n=e,i*(o>>>32-e)}#p(e,t){const n=Math.floor(t/8),r=t-8*n,s=Math.ceil((r+e)/8);this.byteLength;return{view:new DataView(this.#e,n,s),byteLength:s,subBit:r}}get bitLength(){return this.byteLength<<3}get byteLength(){return this.#e.byteLength}get readPointer(){return this.#t}set readPointer(e){e<0||e>this.bitLength||(this.#t=e)}get lastReadSize(){return this.#n}set lastReadSize(e){e<0||e>32||(this.#n=e)}get writePointer(){return this.#r}set writePointer(e){e<0||e>this.bitLength||(this.#r=e)}get lastWriteSize(){return this.#s}set lastWriteSize(e){e<0||e>32||(this.#s=e)}static from(e){if(!e.match(/^[A-Za-z0-9\-_]*$/))throw new s({name:"BitBufferError",message:"Encoded string is not url-safe base 64 encoded","encoded-string":e});const t=new h({size:Math.ceil(3*e.length/4)}),n=/[A-Za-z0-9\-_]{1,4}/g;for(const r of e.match(n)||[]){const e=h.#u(r.padEnd(4,"A"));t.write(e,{size:24})}return t.writePointer=0,t.readPointer=0,t}static#u(e){let t=0;for(const[n,r]of e.split("").entries()){t=(t|h.#f.indexOf(r)<<18-6*n)>>>0}return t}static#c(e){let t="";for(let n=0;n<4;n++){const r=e>>>18-6*n<<26>>>26;t+=h.#f[r]}return t}static#a(e){return Math.abs(e).toString(2).length}static get#f(){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"}}const g=(...e)=>t=>e.reduce(((e,t)=>t(e)),t);class x{constructor(e){this.url=e}absolutePath(e){return t.join(this.__dirname,e)}relativePath(e){return t.relative(this.__dirname,e)}get __pathname(){return n.fileURLToPath(this.url)}get __dirname(){return t.dirname(this.__pathname)}get __filename(){return this.__pathname.replace(this.__dirname,"").slice(1)}}const y=(e,t)=>{const n=t.index,r=e.adjacentIndexes.optional.indexOf(n),s=e.adjacentIndexes.all.indexOf(n);if(-1===r||-1===s)return e;const a=[...e.adjacentIndexes.all];a.splice(s,1);const o=[...e.adjacentIndexes.optional];o.splice(r,1);const i={...e.adjacentIndexes.type},d=t.type.toLowerCase();i[d]=[...i[d]],i[d].splice(i[d].indexOf(n),1);const l={...e.adjacentIndexes,all:a,optional:o,type:i};return{...e,adjacentIndexes:l}},m=(e,t)=>{const n=t.index;if(e.adjacentIndexes.all.includes(n))return e;const r=[...e.adjacentIndexes.all,n],s=[...e.adjacentIndexes.optional,n],a={...e.adjacentIndexes.type},o=t.type.toLowerCase();a[o]=[...a[o],n];const i={...e.adjacentIndexes,all:r,optional:s,type:a};return{...e,adjacentIndexes:i}},w=(e,t)=>{const n=t.index,r=e.adjacentIndexes.optional.indexOf(n);if(-1===r)return e;const s=[...e.adjacentIndexes.required];s.push(n);const a=[...e.adjacentIndexes.optional];a.splice(r,1);const o={...e.adjacentIndexes,required:s,optional:a};return{...e,adjacentIndexes:o}},v=e=>[-6,-5,-1,1,5,6].flatMap((t=>{const n=e+t,r=Math.abs(n%6-e%6);return n>35||n<0||r>1?[]:[n]})),I=e=>Math.floor(e/6),b=e=>e%6,j=e=>{const t=I(e),n=b(e);return 2*Math.floor(t/2)+Math.floor(n/3)},S=(e,t)=>{if(!t.adjacencyIDs.optional.has(e.id))return t;const n=new Set(t.adjacencyIDs.optional),r=new Set(t.adjacencyIDs.deleted);n.delete(e.id),r.add(e.id);const s={...t.adjacencyIDs,optional:n,deleted:r},a=[...t.cells],o=a[e.upperIndex],i=a[e.lowerIndex];return a[e.upperIndex]=y(o,i),a[e.lowerIndex]=y(i,o),{...t,cells:a,adjacencyIDs:s}},z=(e,t)=>{if(!t.adjacencyIDs.deleted.has(e.id))return t;const n=new Set(t.adjacencyIDs.optional),r=new Set(t.adjacencyIDs.deleted);n.add(e.id),r.delete(e.id);const s={...t.adjacencyIDs,optional:n,deleted:r},a=[...t.cells],o=a[e.upperIndex],i=a[e.lowerIndex];return a[e.upperIndex]=m(o,i),a[e.lowerIndex]=m(i,o),{...t,cells:a,adjacencyIDs:s}},P=(e,t)=>{if(!t.adjacencyIDs.optional.has(e.id))return t;const n=new Set(t.adjacencyIDs.optional),r=new Set(t.adjacencyIDs.required);n.delete(e.id),r.add(e.id);const s={...t.adjacencyIDs,required:r,optional:n},a=[...t.cells],o=a[e.upperIndex],i=a[e.lowerIndex];return a[e.upperIndex]=w(o,i),a[e.lowerIndex]=w(i,o),{...t,cells:a,adjacencyIDs:s}},k=(...e)=>{let t,n,r;if(e.length>1){n=Math.min(...e),t=Math.max(...e);const s=I(n),[a,o]=[b(n),b(t)];r=16*s+6*a-5*o+5}else{r=e[0];const s=r%16,a=Math.floor(r/16),o=s%5+5*(s%5?0:1)*Math.floor(s/10);n=6*a+o,t=n+[1,6,5][1+o-(1+(16*a+6*o-r)/5)]}const s=n.toString().padStart(2,"0")+t.toString().padStart(2,"0");return{upperIndex:t,lowerIndex:n,id:r,string:s}},E={detective:"detective",worker:"worker",imposter:"imposter",vacant:"vacant"},A=(e,t)=>(e={...e,type:t},t===E.detective?R(e):e),R=e=>{const t=[...e.adjacentIndexes.type.vacant],n=e.adjacentIndexes.type.imposter.length,r={...e.adjacentIndexes.type,imposter:[...e.adjacentIndexes.type.imposter,...t.splice(0,e.value-n)],vacant:t},s={...e.adjacentIndexes,type:r};return{...e,adjacentIndexes:s}},$=(e,t,n=null,r=!1)=>{if(n??=e.typeIndexes[t][0],!n&&0!==n)return[n];const s=new Set([n]);for(const n of s.values()){const a=e.cells[n],o=r?[...a.adjacentIndexes.all]:[...a.adjacentIndexes.type[t]];for(const n of a.adjacentIndexes.type.vacant){const r=e.cells[n],s=new Set;for(const e of r.candidates)s.add(e.type);const a=()=>t===E.worker,i=()=>1===s.size;s.has(t)&&(a()||i())&&o.push(n)}for(const e of o)s.add(e)}return[...s.values()]},M=(e,t)=>{let n=new Set(e.typeIndexes[t].map((e=>e)));if(!n.size&&t===E.worker){n=new Set;for(const r of e.typeIndexes.vacant){e.cells[r].candidates.map((e=>e.type)).includes(t)&&n.add(r)}}const r=[];for(;n.size;){const s=n.values().next().value,a=$(e,t,s);for(const e of a)n.delete(e);r.push(a)}return r},C=(e,t)=>{const n=[];(t={...t,cells:[...t.cells]}).cells[e.index]=e,t=D(e,t);for(const r of e.adjacentIndexes.all){let s=t.cells[r];t.isGenerating&&s.type===E.detective&&e.type===E.imposter&&!s.adjacentIndexes.type.imposter.includes(e.index)&&n.push(s.index),s=G(e,s),t.cells[r]=s}for(const r of n){const n=t.cells[r],s=k(e.index,n.index);e=(t=S(s,t)).cells[e.index]}if(t.isGenerating&&e.type===E.detective){let n=[...e.adjacentIndexes.type.imposter];for(const e of n){const n=t.cells[e];if(n.type===E.vacant){const e=A(n,E.imposter);t=C(e,t)}}for(n=n.sort(((e,n)=>{const r=t.cells[e].adjacentIndexes.all.length,s=t.cells[n].adjacentIndexes.all.length;return r>s?1:r<s?-1:t.random.shuffleArray([1,-1])[0]}));e.value<n.length;){const r=n[0],s=k(e.index,r);n=(e=(t=S(s,t)).cells[e.index]).adjacentIndexes.type.imposter}}if(!t.isGenerating){if(e.type===E.detective){const n=[...e.adjacentIndexes.all];for(const e of n){let n=t.cells[e];const r=n.candidates.filter((e=>e.type!==E.detective));n={...n,candidates:r},t.cells[e]=n}}6===t.typeIndexes.detective.length?t=L(t,E.detective):12===t.typeIndexes.worker.length?t=L(t,E.worker):18===t.typeIndexes.imposter.length&&(t=L(t,E.imposter))}return t},L=(e,t)=>{e={...e,cells:[...e.cells]};for(let n of e.cells){const r=n.candidates.filter((e=>e.type!==t));n={...n,candidates:r},e.cells[n.index]=n}return e},G=(e,t)=>{const n={...t.adjacentIndexes,type:q(e,t)};return{...t,adjacentIndexes:n}},D=(e,t)=>({...t,typeIndexes:q(e,t)}),q=(e,t)=>{const n={detective:[...(t=t.typeIndexes||t.adjacentIndexes.type).detective],worker:[...t.worker],imposter:[...t.imposter],vacant:[...t.vacant]},r=n.vacant.indexOf(e.index);return-1!==r&&(n.vacant.splice(r,1),n[e.type.toLowerCase()].push(e.index)),n},_=e=>{e=g(T,N,W)(e);for(const t of e.typeIndexes.detective){const n=e.cells[t];for(const r of n.adjacentIndexes.type.imposter){const n=k(t,r);e=P(n,e)}}return e},T=e=>{const t=e.random.shuffledIndexArray(36),n=Array(6).fill(6);for(;n.reduce(((e,t)=>e+t),0)>18;)n.unshift(e.random.prng(1,6)),n.pop();for(let r=0;6!==e.typeIndexes.detective.length&&r<36;r++){const s=t[r],a=e.cells[s];if(O(a,n)){const t=A(a,E.detective);e=C(t,e),n.splice(n.indexOf(a.value),1)}}return e},O=(e,t)=>{const n=e.adjacentIndexes.type,r=e.value-n.imposter.length,s=e.value+(e.adjacentIndexes.all.length-2);return e.type===E.vacant&&!n.detective.length&&r<=n.vacant.length&&s>=n.imposter.length&&t.includes(e.value)},N=e=>{const t=e.random.shuffledIndexArray(36);let n;for(let r=0;!n&&r<36;r++){const s=t[r],a=e.cells[s],o=V(a,e);if(o.valid){({continuosIndexes:n}=o);break}}if(n)for(const t of n.splice(0,12)){const n=e.cells[t],r=A(n,E.worker);e=C(r,e)}return e},V=(e,t)=>{const n=$(t,E.vacant,e.index);return{valid:e.type===E.vacant&&n.length>=12,continuosIndexes:n}},W=e=>{for(const t of e.typeIndexes.vacant){const n=e.cells[t];if(n.type===E.vacant){const t=A(n,E.imposter);e=C(t,e)}}return e},B=e=>{for(const t of e.cells)if(t.type===E.imposter){if(new Set(t.adjacentIndexes.all.map((t=>e.cells[t].value))).size<2)return!1}return 0===e.typeIndexes.vacant.length&&6===e.typeIndexes.detective.length&&12===e.typeIndexes.worker.length&&18===e.typeIndexes.imposter.length},U=e=>{for(let t=0;t<36;t++){const n=e.cells[t];if(!n.value&&!n.candidates.length)return!1}return F(e)&&Z(e)&&H(e)},F=e=>{const t=M(e,E.detective);if(Math.max(...t.map((e=>e.length)))>1)return!1;for(const t of e.typeIndexes.detective){const n=e.cells[t];let r=n.adjacentIndexes.type.imposter.length,s=n.adjacentIndexes.type.imposter.length;for(const t of n.adjacentIndexes.type.vacant){const n=e.cells[t],a=new Set;for(const e of n.candidates)a.add(e.type);a.has(E.imposter)&&(1===a.size&&r++,s++)}if(n.value<r||n.value>s)return!1}return e.typeIndexes.detective.length<=6&&J(e,E.detective)>=6},Z=e=>{const t=M(e,E.worker);return!(Math.max(...t.map((e=>e.length)))<12)&&(e.typeIndexes.worker.length<=12&&J(e,E.worker)>=6)},H=e=>{const t=M(e,E.imposter);if(Math.max(...t.map((e=>e.length)))>=7)return!1;for(const t of e.typeIndexes.imposter){const n=e.cells[t],r=n.hints.imposter.filter((e=>e!==n.value)),s=new Set;for(const t of n.adjacentIndexes.all){const n=e.cells[t],r=n.value?[n.value]:n.candidates.map((e=>e.value));for(const e of r)s.add(e)}if(!s.has(r[0])||!s.has(r[1]))return!1}return e.typeIndexes.imposter.length<=18&&J(e,E.imposter)>=6},J=(e,t)=>{let n=0;for(const r of e.cells)if(r.type===t)n++;else if(r.type===E.vacant){r.candidates.map((e=>e.type)).includes(t)&&n++}return n},Q=(e,t)=>{const n=t.shuffleArray(v(e));return{index:e,row:I(e),column:b(e),box:j(e),candidates:t.shuffledIndexArray(6,!0).map((e=>({value:e,type:E.vacant}))),clientCandidates:[],value:0,clientValue:0,type:E.vacant,hints:{detective:[],worker:[],imposter:[]},adjacentIndexes:{all:n,required:[],optional:n,type:{detective:[],worker:[],imposter:[],vacant:n}}}},Y=(e,t)=>{let n=e.cells[t];const r=e.random.shuffledIndexArray(6,!0),s=[];if(n.type===E.imposter){const t=new Set;for(const r of n.adjacentIndexes.all){const n=e.cells[r];t.add(n.value)}const a=e.random.shuffleArray([...t.values()]).splice(0,2);for(let e=0;e<6;e++){const t=r[e];t===n.value||a.includes(t)||s.push(t)}s.push(...a)}else for(let e=0;e<6;e++){const t=r[e];t!==n.value&&s.push(t)}const a=n.type===E.detective?0:n.type===E.worker?e.random.prng(1,2):e.random.prng(3,5);s.splice(a,0,n.value);const o=s.splice(0,1),i=s.splice(0,2).sort(),d=s.splice(0,3).sort();return n={...n,hints:{detective:o,worker:i,imposter:d}},n},K=e=>{e={...e,cells:[...e.cells]};for(let t=0;t<36;t++){const n=Y(e,t);if(e.cells[t]=n,n.type===E.imposter){const t=new Set(n.hints.imposter.filter((e=>e!==n.value)));for(const r of n.adjacentIndexes.required){const n=e.cells[r];t.delete(n.value)}for(const r of n.adjacentIndexes.all){const s=e.cells[r];if(t.has(s.value)){const a=k(n.index,r);e=P(a,e),t.delete(s.value)}}}}return e},X=(e,t=!1)=>{const n=Array.from({length:6},((t,n)=>{const r=n+1;return{value:r,type:e.hints.detective.includes(r)?E.detective:e.hints.worker.includes(r)?E.worker:E.imposter}})),r=E.vacant,s={detective:[],worker:[],imposter:[],vacant:[...e.adjacentIndexes.all]},a={...e.adjacentIndexes,type:s};return t?{...e,candidates:n,value:0,type:r,adjacentIndexes:a}:{...e,candidates:n}},ee=e=>{const t=[...e.candidates.sort(((e,t)=>e.value-t.value))],n={};for(const t of Object.keys(e.hints))n[t]=[...e.hints[t].sort(((e,t)=>e-t))];const r={};for(const t of Object.keys(e.adjacentIndexes))if("type"!==t)r[t]=[...e.adjacentIndexes[t].sort(((e,t)=>e-t))];else{r.type={};for(const t of Object.keys(e.adjacentIndexes.type))r.type[t]=[...e.adjacentIndexes.type[t].sort(((e,t)=>e-t))]}return{...e,candidates:t,hints:n,adjacentIndexes:r}},te=(e,t=!1)=>{const n={detective:[],worker:[],imposter:[],vacant:Array.from({length:36},((e,t)=>t))};e=t?{...e,typeIndexes:n,cells:[...e.cells],isGenerating:!1}:{...e,cells:[...e.cells],isGenerating:!1};for(const n of e.cells)e.cells[n.index]=X(n,t);return e},ne=e=>te(e,!1),re=e=>te(e,!0),se=e=>{const t={};for(const n of Object.keys(e.typeIndexes))t[n]=[...e.typeIndexes[n].sort(((e,t)=>e-t))];const n={required:new Set,optional:new Set,deleted:new Set};for(let t=0;t<85;t++)e.adjacencyIDs.required.has(t)?n.required.add(t):e.adjacencyIDs.optional.has(t)?n.optional.add(t):n.deleted.add(t);e={...e,cells:[...e.cells],typeIndexes:t,adjacencyIDs:n};for(const t of e.cells)e.cells[t.index]=ee(t);return e},ae=e=>{const t=[...e.candidates],n=t.pop(),r=n?.value,s=n?.type;return{...e,value:r,type:s,candidates:t}},oe=e=>Array.from({length:e.candidates.length},(()=>e=ae(e))),ie=(e,t)=>{const{row:n,column:r,box:s,value:a}=e;(t={...t,cells:[...t.cells]}).cells[e.index]=e;const o=[...de(n),...le(r),...ce(s)];for(const e of o){let n=t.cells[e];const r=n.candidates.filter((e=>e.value!==a));n={...n,candidates:r},t.cells[e]=n}if(!t.isGenerating)for(const n of e.adjacentIndexes.all){let e=t.cells[n];const r=e.candidates.filter((e=>e.value!==a));e={...e,candidates:r},t.cells[n]=e}return t},de=e=>{const t=Array(6);for(let n=0;n<6;n++)t[n]=6*e+n;return t},le=e=>{const t=Array(6);for(let n=0;n<6;n++)t[n]=6*n+e;return t},ce=e=>{const t=Array(6);for(let n=0;n<6;n++){const r=e%2,s=Math.floor(e/2),a=n%3,o=Math.floor(n/3);t[n]=3*r+12*s+a+6*o}return t},pe=e=>{const t=new Set;for(let n=0;n<36;n++){const r=e.cells[n],s=r.value?[r.value]:r.candidates.map((e=>e.value));if(!s)return!1;for(let e=0;e<s.length;e++){const n=6*r.row+s[e],a=36+6*r.column+s[e],o=72+6*r.box+s[e];t.add(n).add(a).add(o)}}return 108===t.size},ue=e=>{const t=[e];let n=0;const r=e.random.shuffledIndexArray(36);for(let s=0;s<36;s++){const a=r[s],o=ae(e.cells[a]);if(e=ie(o,e),pe(e))t.push(e);else{let n=e.cells[a];for(;!n.candidates.length;)n=(e=t.pop()).cells[r[--s]];n.value=0,(e=t.slice(-1)[0]).cells[n.index]=n,--s}if(++n>1e4)return ue(t[0])}return e},fe=(e,t)=>{const n=e.cells[t],r=oe(n),s=[];for(const t of r){let n=ie(t,e);pe(n)&&(n=C(t,n),U(n)&&s.push(n))}return s},he=e=>{let t=0,n=[e];for(let e=0;e<36;e++){t+=n.length;const e=[];for(const t of n){const n=[...t.typeIndexes.vacant].sort(((e,n)=>{const r=t.cells[e].candidates.length,s=t.cells[n].candidates.length;return r>s?1:r<s?-1:t.random.shuffleArray([1,-1])[0]}));e.push(...fe(t,n[0]))}n=e}return{grids:n,rawEntropy:t}},ge=e=>{const t=(e=g(xe,ye)(e)).random.iterate();for(const n of e.adjacencyIDs.optional){const r=k(n);e=e.random.iterate()>t?P(r,e):S(r,e)}return e},xe=e=>{const t=[];for(const n of e.typeIndexes.imposter){const r=e.cells[n];for(const s of r.adjacentIndexes.optional){const r=k(n,s),a=S(r,e);me(a)?(e=a,t.push(r)):e=P(r,e)}}for(const n of t){const t=z(n,e);U(t)&&(e=t)}return e},ye=e=>{const t=[];for(const n of e.typeIndexes.worker){const r=e.cells[n],s=r.adjacentIndexes.type.worker.filter((e=>r.adjacentIndexes.optional.includes(e)));for(const r of s){const s=k(n,r),a=S(s,e);me(a)?(e=a,t.push(s)):e=P(s,e)}}for(const n of t)e=z(n,e);return e},me=e=>{for(const t of e.cells)if(t.type===E.imposter){if(new Set(t.adjacentIndexes.all.map((t=>e.cells[t].value))).size<2)return!1}return 36===$(e,E.vacant,0,!0).length},we=e=>{let t=e;for(const n of e.cells)for(const r of n.adjacentIndexes.all){if(e.cells[r].value===n.value){const e=k(r,n.index);t=S(e,t)}}return t},ve=e=>{const t=Array.from({length:36},((t,n)=>Q(n,e))),n={detective:[],worker:[],imposter:[],vacant:e.shuffledIndexArray(36)},r=new Set;t.forEach((e=>{e.adjacentIndexes.all.forEach((t=>{const n=k(e.index,t);r.add(n.id)}))}));return{cells:t,typeIndexes:n,adjacencyIDs:{required:new Set,optional:r,deleted:new Set},random:e,isGenerating:!0}},Ie=e=>{let t=0;let n,r;e:do{n=g(ve,ue,we)(e);do{if(r=_(n),++t>85){e.jumpRandom(),t=0;continue e}}while(!B(r));n=g(ge,K)(r)}while(!U(n));const s=g(re,he)(n);if(1!==s.grids.length||!be(n,s.grids[0]))return e.jumpRandom(),Ie(e);const{rawEntropy:a}=s;return n=g(ne,se)(n),{grid:n,rawEntropy:a}},be=(e,t)=>!0,je=e=>{const t=new h({size:11});for(let n=0;n<85;n++){const r=e.adjacencyIDs.required.has(n);t.write(r?1:0)}return t},Se=e=>{const t={required:new Set,optional:new Set,deleted:new Set};for(let n=0;n<85;n++)e.read(1)?t.required.add(n):t.deleted.add(n);return t},ze=e=>{let t=new h({size:3});const{value:n,clientValue:r,hints:s}=e,a=[n,r,...s.detective,...s.worker];for(const e of a)t.write(e,{size:3});if(e.clientCandidates.length&&6!==e.clientCandidates.length){t.write(1,{size:1});const n=e.clientCandidates.map((({value:e})=>e));let r=0;for(let e=0;e<6;e++)n.includes(e+1)&&(r|=1<<e);t.write(r,{size:6})}else t.write(0,{size:1});const o=Math.ceil(t.writePointer/8);return t=t.copy({target:new h({size:o}),sourceEnd:t.writePointer}),t},Pe=(e,t)=>{const n=v(t),r={index:t,row:I(t),column:b(t),box:j(t),candidates:[],clientCandidates:[],value:e.read(3),clientValue:e.read(3),type:E.vacant,hints:{detective:[e.read(3)],worker:[e.read(3),e.read(3)],imposter:[]},adjacentIndexes:{all:n,required:[],optional:n,type:{detective:[],worker:[],imposter:[],vacant:[]}}};r.type=r.hints.detective.includes(r.value)?E.detective:r.hints.worker.includes(r.value)?E.worker:E.imposter,r.hints.imposter=[1,2,3,4,5,6].filter((e=>!r.hints.detective.includes(e)&&!r.hints.worker.includes(e)));let s=parseInt("111111",2);e.read(1)&&(s=e.read(6));for(let e=0;e<6;e++)r.candidates.push(ke(r,e+1)),s<<31-e>>>31&&r.clientCandidates.push(ke(r,e+1));return{...r}},ke=(e,t)=>({value:t,type:e.hints.detective.includes(t)?E.detective:e.hints.worker.includes(t)?E.worker:E.imposter}),Ee=e=>{e=se(e);let t=new h({size:128});for(const n of e.cells){const e=ze(n);e.copy({target:t,sourceEnd:e.writePointer})}const n=je(e);n.copy({target:t,sourceEnd:n.writePointer});const r=Math.ceil(t.writePointer/8);return t=t.copy({target:new h({size:r}),sourceEnd:t.writePointer}),t},Ae=(e,t)=>{const n={detective:[],worker:[],imposter:[],vacant:[]},r=[];for(let t=0;t<36;t++){const s=Pe(e,t);n[s.type].push(t),r.push(s)}r.forEach((e=>{e.adjacentIndexes.all.forEach((t=>{const{type:n}=r[t];e.adjacentIndexes.type[n].push(t)}))}));const s=Se(e);let a={cells:r,typeIndexes:n,adjacencyIDs:{required:new Set,optional:new Set(Array.from({length:85},((e,t)=>t))),deleted:new Set},random:new f(t),isGenerating:!1};for(const e of a.adjacencyIDs.optional)a=s.required.has(e)?P(k(e),a):S(k(e),a);return a=se(a),a},Re=e=>{let t=new h({size:128});t.writeString(e.version.puzzle),t.writeString(e.version.repository),t.writeAbsolute(e.seed);const n=Ee(e.grid);n.copy({target:t,sourceEnd:n.writePointer}),t.writeAbsolute(e.rawEntropy),t.write(e.normalizedEntropy,{size:10}),t.write(e.uniformEntropy,{size:10});const r=Math.ceil(t.writePointer/8);return t=t.copy({target:new h({size:r}),sourceEnd:t.writePointer}),t.toString()},$e="1.0.0",Me={beginner:"beginner",easy:"easy",medium:"medium",hard:"hard",expert:"expert"},Ce=()=>{const t=new x("undefined"==typeof document?require("url").pathToFileURL(__filename).href:r&&r.src||new URL("index.cjs",document.baseURI).href).absolutePath("../../../../package.json"),{packageObject:n,packageError:a}=((t="package.json")=>{const n=e=>{throw new s({name:"PackageJsonError",message:"Error encountered parsing repository package.json file",path:`${process.cwd()}/${t}`,detail:e.message,"caller-stack":e.stack})};let r;try{r=JSON.parse(e.readFileSync(t).toString())}catch(e){n(e)}return{packageObject:r,packageError:n}})(t),{version:o}=n;if(!o){a(new Error("Version unset or unrecognized, no package version found"))}return o},Le=e=>{const t=512+256*(Math.log(e)-6.94);return Math.min(Math.max(Math.round(t),0),1024)},Ge=e=>{const t=u({upper:e,mean:512,stdDev:187});return Math.round(1024*t)},De=e=>Math.ceil(e/10.24),qe=e=>e<=20?Me.beginner:e<=40?Me.easy:e<=60?Me.medium:e<=80?Me.hard:Me.expert,_e=(e,t)=>{const n=[];for(let r=0;r<6;r++){const s=6*t+r,a=e.cells[s],[o]=a.hints.detective,i=[o===a.value?"(":" ",o===a.value?")":" "];let d=`${a.type===E.vacant?"V  ":""}${i[0]}${o||0}${i[1]}`.padStart(7);d=d.padEnd(11);const l=r?"":"  ";n.push(`${l}┌${d}┐  `)}console.log(n.join(""))},Te=(e,t)=>{const n=[];for(let r=0;r<6;r++){const s=6*t+r,a=e.cells[s],[o,i]=a.hints.worker,d=[o===a.value?"(":" ",o===a.value?")":" ",i===a.value?"(":" ",i===a.value?")":" "],l=`${d[0]}${o||0}${d[1]}`,c=`${d[2]}${i||0}${d[3]}`;let p=l.padStart(5);p+=` ${c}`,p=p.padEnd(11);const u=a.adjacentIndexes.all.includes(s+1)?"──":"  ",f=r?"":"  ";n.push(`${f}│${p}│${u}`)}console.log(n.join(""))},Oe=(e,t)=>{const n=[];for(let r=0;r<6;r++){const s=6*t+r,a=e.cells[s],[o,i,d]=a.hints.imposter,l=[o===a.value?"(":" ",o===a.value?")":" ",i===a.value?"(":" ",i===a.value?")":" ",d===a.value?"(":" ",d===a.value?")":" "],c=`${l[0]}${o||0}${l[1]}`,p=`${l[2]}${i||0}${l[3]}`,u=`${l[4]}${d||0}${l[5]}`;let f=c.padStart(3);f+=` ${p} ${u}`,f=f.padEnd(11);const h=r?"":"  ";n.push(`${h}└${f}┘  `)}console.log(n.join(""))},Ne=(e,t)=>{const n=[];for(let r=0;r<6;r++){const s=6*t+r,a=e.cells[s],o=a.adjacentIndexes.all.includes(s+5),i=a.adjacentIndexes.all.includes(s+6);let d=o?" ╱":"  ";d=d.padEnd(8),d+=i?"│":" ";const l=d.padEnd(15);n.push(`${l}`)}console.log(n.join("")),n.forEach(((e,t)=>{n[t]=`${e[1]} ${e.slice(2)}`})),console.log(n.join(""))};exports.CELL_TYPES=E,exports.IMPOSTORI_GRADES=Me,exports.PUZZLE_VERSION=$e,exports.addCellAdjacency=m,exports.addGridAdjacency=z,exports.allContinuosTypeIndexes=M,exports.completedGridTypes=B,exports.continuosTypeIndexes=$,exports.deserializeAdjacencies=Se,exports.deserializeCell=Pe,exports.deserializeGrid=Ae,exports.deserializeImpostori=e=>{const t=h.from(e),n={puzzle:t.readString(),repository:t.readString()},r=t.readAbsolute(),s={version:n,seed:r,grid:Ae(t,r),rawEntropy:t.readAbsolute(),normalizedEntropy:t.read(10),uniformEntropy:t.read(10)},a=De(s.uniformEntropy),o=qe(a);return{...s,rating:a,grade:o,serializedString:e}},exports.fillCellHints=Y,exports.fillCellType=A,exports.fillCellValue=ae,exports.fillGridHints=K,exports.fillGridTypes=_,exports.fillGridValues=ue,exports.forkCellValue=oe,exports.generateEmptyCell=Q,exports.generateEmptyGrid=ve,exports.generateGrid=Ie,exports.generateImpostori=e=>{const t=new f(e),{grid:n,rawEntropy:r}=Ie(t),s={version:{puzzle:$e,repository:Ce()},seed:t.config.seed,grid:n,rawEntropy:r};return s.normalizedEntropy=Le(s.rawEntropy),s.uniformEntropy=Ge(s.normalizedEntropy),s.rating=De(s.uniformEntropy),s.grade=qe(s.rating),s.grid.random=new f(s.seed),{...s,serializedString:Re(s)}},exports.getAdjacencyData=k,exports.getAdjacentIndexes=v,exports.getBox=j,exports.getCandidate=ke,exports.getColumn=b,exports.getGradeString=qe,exports.getRating=De,exports.getRow=I,exports.hardResetCell=e=>X(e,!0),exports.hardResetGrid=re,exports.printGrid=e=>{for(let t=0;t<6;t++)_e(e,t),Te(e,t),Oe(e,t),Ne(e,t)},exports.propagateCellType=C,exports.propagateCellValue=ie,exports.pruneGridAdjacencies=ge,exports.removeCellAdjacency=y,exports.removeGridAdjacency=S,exports.removeTwins=we,exports.requireCellAdjacency=w,exports.requireGridAdjacency=P,exports.resetCell=X,exports.resetGrid=te,exports.serializeAdjacencies=je,exports.serializeCell=ze,exports.serializeGrid=Ee,exports.serializeImpostori=Re,exports.softResetCell=e=>X(e,!1),exports.softResetGrid=ne,exports.solveCell=fe,exports.solveGrid=he,exports.sortCell=ee,exports.sortGrid=se,exports.validateGridTypes=U,exports.validateGridValues=pe;
