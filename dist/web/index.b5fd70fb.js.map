{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,c,W,O,A,E,S,W,A,G,E,E,O,C,2B,W,O,A,E,S,wB,A,G,E,S,E,Q,G,E,Q,S,C,C,C,E,E,E,O,C,c,W,O,C,EEoBA,OAAM6B,UAAoBG,kBACtB,CAACC,CAAI,AAAL,AAKAC,aAAYD,CAAI,CAAE,CACd,KAAK,GAEL,IAAI,CAAC,CAACA,CAAI,CAAGA,CACjB,CAEAE,mBAAoB,CAChB,IAAMC,EAAaC,SAASC,aAAa,CAAC,IAC1CF,CAAAA,EAAWG,SAAS,CAAG,IAAI,CAAC,CAACN,CAAI,CACjC,IAAMO,EAAiBH,SAASC,aAAa,CAAC,OAC9CE,EAAeC,WAAW,CAACL,GAC3B,IAAI,CAACK,WAAW,CAACD,GACjB,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,eACvB,CACJ,C,G,E,Q,S,C,C,C,E,E,E,O,C,2B,W,O,C,G,I,E,E,QCnBA,OAAMb,UAAiCgB,YACnC,CAACC,CAAO,CAAG,AAAyB,UAAzB,IAAI,CAACC,OAAO,CAACD,OAAO,AAA/B,AACA,EAACE,CAAK,CAAG,IAAIC,EAAAA,QAAAA,CAAS,CAAC,EAAvB,AACA,EAACC,CAAgB,CAAG,IAAI,CAAC,CAACF,CAAK,CAACG,eAAe,CAAC,CAACC,EAAOC,KACpDjD,OAAOkD,MAAM,CAACF,EAAOC,EACzB,EAAA,AACA,EAACE,CAAS,CAAG,CACTC,UAAW,CAAC,CAAEC,QAAS,CAAE,EAAG,CAAEA,QAAS,CAAE,EAAE,CAC3CC,QAAS,CAAEC,OAAQ,WAAYC,SAAU,GA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","sources":["<anon>","src/web/scripts/components/index.js","src/web/scripts/components/PixelButton.js","src/web/scripts/components/StatefulLoadingContainer.js","node_modules/@blameitonyourisp/boutique/dist/package/index.js","src/web/scripts/selector/index.js","src/web/scripts/index.js","src/web/scripts/hoverable.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5df6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5df6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"5LG4Q\", function(module, exports) {\n$parcel$export(module.exports, \"PixelButton\", function () { return (parcelRequire(\"dCg6x\")).PixelButton; });\n$parcel$export(module.exports, \"StatefulLoadingContainer\", function () { return (parcelRequire(\"cQA11\")).StatefulLoadingContainer; });\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Export custom web components.\n * @author James Reid\n */ // @ts-check\n// @@no-imports\n// @@no-body\n// @@exports\nparcelRequire(\"dCg6x\");\nparcelRequire(\"cQA11\");\n\n});\nparcelRegister(\"dCg6x\", function(module, exports) {\n\n$parcel$export(module.exports, \"PixelButton\", function () { return $9e9b50f9e00dc78a$export$2e64f27de16040b1; });\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Implement pixel button component.\n * @author James Reid\n */ // @ts-check\n// @@no-imports\n// @@body\nclass $9e9b50f9e00dc78a$export$2e64f27de16040b1 extends HTMLButtonElement {\n    #text;\n    /**\n   * @param {string} text\n   */ constructor(text){\n        super();\n        this.#text = text;\n    }\n    connectedCallback() {\n        const buttonText = document.createElement(\"p\");\n        buttonText.innerText = this.#text;\n        const innerContainer = document.createElement(\"div\");\n        innerContainer.appendChild(buttonText);\n        this.appendChild(innerContainer);\n        this.classList.add(\"pixel-button\");\n    }\n}\n\n});\n\nparcelRegister(\"cQA11\", function(module, exports) {\n\n$parcel$export(module.exports, \"StatefulLoadingContainer\", function () { return $95a6474ac575cdaf$export$eba58f2af78a5ad3; });\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Implement basic stateful loading container web component.\n * @author James Reid\n */ // @ts-check\n// @@imports-dependencies\n\nvar $9c5Tu = parcelRequire(\"9c5Tu\");\n// @@body\nclass $95a6474ac575cdaf$export$eba58f2af78a5ad3 extends HTMLElement {\n    #loading = this.dataset.loading === \"false\" ? false : true;\n    #store = new (0, $9c5Tu.Boutique)({});\n    #shallowRedaction = this.#store.createRedaction((state, detail)=>{\n        Object.assign(state, detail);\n    });\n    #animation = {\n        keyframes: [\n            {\n                opacity: 1\n            },\n            {\n                opacity: 0\n            }\n        ],\n        options: {\n            easing: \"ease-out\",\n            duration: 300\n        },\n        reverse: {\n            direction: /** @type {PlaybackDirection} */ \"reverse\"\n        }\n    };\n    constructor(){\n        super();\n    }\n    connectedCallback() {\n        if (!this.dataset.loading?.match(/^true$|^false$/)) this.dataset.loading = true.toString();\n        const loadingContainer = document.createElement(\"div\");\n        loadingContainer.classList.add(\"loading\", \"loading-container\");\n        const loadingText = document.createElement(\"p\");\n        loadingText.innerText = this.dataset.text || \"Loading...\";\n        const loadingBar = document.createElement(\"div\");\n        loadingBar.classList.add(\"pixel-container\", \"loading-bar\");\n        const loadingBounce = document.createElement(\"div\");\n        loadingBounce.classList.add(\"pixel-container\", \"loading-bounce\");\n        loadingBar.appendChild(loadingBounce);\n        loadingContainer.append(loadingText, loadingBar);\n        const contentContainer = document.createElement(\"div\");\n        contentContainer.classList.add(\"content\");\n        this.classList.add(\"stateful-loading-container\");\n        this.append(loadingContainer, contentContainer);\n    }\n    /**\n   *\n   * @param {HTMLElement} newContent\n   */ load(newContent) {\n        return new Promise((resolve)=>{\n            const { keyframes: keyframes, options: options, reverse: reverse } = this.#animation;\n            const replaceContent = ()=>{\n                this.contentContainer.replaceWith(newContent);\n                this.contentContainer.animate(keyframes, {\n                    ...options,\n                    ...reverse\n                }).addEventListener(\"finish\", ()=>{\n                    resolve({});\n                });\n            };\n            if (this.loading) this.loadingContainer.animate(keyframes, options).addEventListener(\"finish\", ()=>{\n                this.loading = false;\n                replaceContent();\n            });\n            else this.contentContainer.animate(keyframes, options).addEventListener(\"finish\", replaceContent);\n        });\n    }\n    unload() {\n        return new Promise((resolve)=>{\n            if (this.loading) resolve({});\n            const { keyframes: keyframes, options: options, reverse: reverse } = this.#animation;\n            this.contentContainer.animate(keyframes, options).addEventListener(\"finish\", ()=>{\n                this.loading = true;\n                this.loadingContainer.animate(keyframes, {\n                    ...options,\n                    ...reverse\n                }).addEventListener(\"finish\", ()=>{\n                    resolve({});\n                });\n            });\n        });\n    }\n    /**\n   * @param {any} detail\n   */ redact(detail) {\n        this.#shallowRedaction(detail);\n    }\n    get loading() {\n        return this.#loading;\n    }\n    set loading(bool) {\n        this.dataset.loading = bool.toString();\n        this.#loading = bool;\n    }\n    get loadingContainer() {\n        return this.getElementsByClassName(\"loading\")[0];\n    }\n    get contentContainer() {\n        return this.getElementsByClassName(\"content\")[0];\n    }\n    get createRedaction() {\n        return this.#store.createRedaction.bind(this.#store);\n    }\n    get createListener() {\n        return this.#store.createListener.bind(this.#store);\n    }\n    get addListener() {\n        return this.#store.addListener.bind(this.#store);\n    }\n    get removeListener() {\n        return this.#store.removeListener.bind(this.#store);\n    }\n    get state() {\n        return this.#store.state;\n    }\n    static contentContainer() {\n        const container = document.createElement(\"div\");\n        container.classList.add(\"content\");\n        return container;\n    }\n}\n\n});\nparcelRegister(\"9c5Tu\", function(module, exports) {\n\n$parcel$export(module.exports, \"Boutique\", function () { return $6b19ce777cfcd843$export$5e986691550fc0c1; });\nclass $6b19ce777cfcd843$export$5e986691550fc0c1 {\n    constructor(e){\n        this.evs = {}, this.state = e;\n    }\n    createRedaction(e) {\n        return (t)=>{\n            const { state: s, tracer: r } = this.proxy;\n            this.redact(r, e(s, t));\n        };\n    }\n    createListener(e) {\n        const { state: t, tracer: s } = this.proxy;\n        return e(t), {\n            func: (s)=>e(t, s)(),\n            deps: s.map((e)=>e.key)\n        };\n    }\n    addListener(e) {\n        e.deps.forEach((t)=>{\n            this.evs[t] = [\n                ...this.evs[t] || [],\n                e\n            ];\n        });\n    }\n    removeListener(e) {\n        e.deps.forEach((t)=>{\n            this.evs[t] = this.evs[t].filter((t)=>t !== e);\n        });\n    }\n    redact(e, t, s = []) {\n        e.forEach((e)=>{\n            if (e.value) {\n                let t = this.state;\n                e.key.split(\".\").slice(1).reduce((r, c, n, a)=>(n !== a.length - 1 ? t = t[c] || {} : t[c] = e.value, r = `${r}.${c}`, s.push(...this.evs[r] || []), r), \"\");\n            }\n        }), [\n            ...new Set(s)\n        ].forEach((e)=>e.func(t));\n    }\n    handler(e, t = \"\") {\n        return {\n            get: (s, r)=>{\n                const c = `${t}.${r}`;\n                t && c.includes(e[0].key) ? e.splice(0, 1, {\n                    key: c\n                }) : e.unshift({\n                    key: c\n                });\n                const n = s[r];\n                return \"object\" != typeof n ? n : new Proxy(n, this.handler(e, c));\n            },\n            set: (s, r, c)=>!!e.push({\n                    key: `${t}.${r}`,\n                    value: c\n                })\n        };\n    }\n    get proxy() {\n        const e = [];\n        return {\n            state: new Proxy(this.state, this.handler(e)),\n            tracer: e\n        };\n    }\n}\nconst $6b19ce777cfcd843$export$43861ddbc01de2f5 = (e)=>{\n    const s = {};\n    for(const r in e)\"object\" == typeof e[r] ? s[r] = $6b19ce777cfcd843$export$43861ddbc01de2f5(e[r]) : s[r] = e[r];\n    return s;\n};\n\n});\n\n\n\nparcelRegister(\"8iDW5\", function(module, exports) {\n\n$parcel$export(module.exports, \"runSelector\", function () { return $60aefb9e64f504fc$export$5f384e801479b4fc; });\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Run selector page.\n * @author James Reid\n */ // @ts-check\n// @@imports-package\nparcelRequire(\"5LG4Q\");\nvar $dCg6x = parcelRequire(\"dCg6x\");\nvar $cQA11 = parcelRequire(\"cQA11\");\n// @@body\n/**\n * @param {StatefulLoadingContainer} root\n */ const $60aefb9e64f504fc$export$5f384e801479b4fc = (root)=>{\n    const { dailyPuzzles: dailyPuzzles } = root.state;\n    const container = (0, $cQA11.StatefulLoadingContainer).contentContainer();\n    for(const key in dailyPuzzles){\n        const button = new (0, $dCg6x.PixelButton)(key.toUpperCase());\n        button.addEventListener(\"click\", ()=>{\n            history.replaceState({\n                page: \"home\"\n            }, \"\");\n            history.pushState({}, \"\");\n            root.redact({\n                serializedPuzzle: dailyPuzzles[key][0]\n            });\n        });\n        container.appendChild(button);\n    }\n    root.load(container);\n};\n\n});\n\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Run Impostori SPA.\n * @author James Reid\n */ // @ts-check\n// @@imports-module\n// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n/**\n * @file Set body hoverable class for correctly rendering mobile buttons which\n *      have just been clicked.\n * @author James Reid\n */ // @ts-check\n// @@no-imports\n// @@body\nconst $318bce6d2393327c$export$491979a7c8fb2d1c = ()=>{\n    let isTouchActive = false;\n    const updateHoverable = ()=>{\n        isTouchActive ? document.body.classList.remove(\"hoverable\") : document.body.classList.add(\"hoverable\");\n    };\n    document.addEventListener(\"touchstart\", ()=>{\n        // Activate touch then update hoverable class.\n        isTouchActive = true;\n        updateHoverable();\n    });\n    document.addEventListener(\"mousemove\", ()=>{\n        // Update hoverable class *first* then disable touch in order to ignore\n        // emulated mousemove events dispatched after touchstart or touchend\n        // events.\n        updateHoverable();\n        isTouchActive = false;\n    });\n    updateHoverable();\n};\n\n\nparcelRequire(\"5LG4Q\");\nvar $dCg6x = parcelRequire(\"dCg6x\");\nvar $cQA11 = parcelRequire(\"cQA11\");\n\nvar $8iDW5 = parcelRequire(\"8iDW5\");\n// @@body\n/**\n * @todo Add completed puzzle site to itch.io.\n * @todo Add \"test\" and \"commit\"/\"revert\" buttons for testing a hypothesis about\n *      a candidate/cell.\n * @todo Add puzzle \"reset\" button.\n * @todo Add \"go home\" button to return to selector screen.\n * @todo Add timing feature to see how fast you can solve a puzzle.\n * @todo Add \"share\" button to share puzzle in current solve state.\n * @todo Add puzzle grade and rating to top nav.\n * @todo Add number of cells found/completed by type indicator.\n * @todo Add buttons to remove all candidates in a cell by type.\n * @todo Refactor _Puzzle to _Impostori method and state naming etc.\n * @todo Add state to loading container with redact method etc.\n * @todo Fix cyclical object bug on Boutique proxy to object feature (add\n *      tracker to detect cyclical object and resolve them).\n * @todo Add multiple radii to pixel container borders (add \"pixel-radius-x\"\n *      class styles).\n * @todo Update unload method to return a promise, then only render next page\n *      after unload is done. Promisify load method too on container.\n * @todo Include separate scripts, one to render the loading container, then one\n *      which loads pixi and starts the spritesheet import etc.\n * @todo Add bookmark and undo features to allow users to test and rollback.\n * @todo Add zoom ability to grid portion of pixi container.\n * @todo Remove root from stateful loading container (just target the container\n *      instead in css etc.).\n * @todo Add root div to html to which nav and loading container are appended?\n * @todo Change popstate listener to directly execute a function passed in the\n *      history state object.\n * @todo Add data to resolve object on load/unload methods in loading container.\n * @todo Remove direct calls to re-render puzzle by relying on state events\n *      instead.\n * @todo Add type declaration for \"complete\" root state.\n */ /**\n * Steps:\n * 1. Run scripts to setup page and define custom web components.\n * 2. Declare Boutique store:\n *      2.1 Load spritesheet async and add to store with redaction.\n *      2.2 Load daily puzzles async and add to store with redaction.\n * 3. Select encoded puzzle string:\n *      3.1 Check url parameters for existing puzzle string to use by default.\n *      3.2 Check local storage for incomplete local puzzle, and add this to\n *          \"pick up where you left off\" option for this device.\n *      3.3 Update store to indicate that url params and local storage have been\n *          checked, and selector can be rendered.\n *      3.4 On daily puzzles loaded *and* url parameters checked, render list of\n *          daily puzzles, and wait for user to choose, then update store.\n *      3.5 Update impostori and encodedImpostori strings in store.\n * 4. On spritesheet loaded *and* encoded puzzle string chosen, run tutorial:\n *      4.1 Check local storage for if tutorial completed, if so set store value\n *          for tutorial complete.\n *      4.2 Otherwise render tutorial slide based on current active slide in\n *          store (default 0). Re-render on store update.\n *      4.3 Add buttons for \"skip\" and \"prev\"/\"next\" which update store current\n *          slide as required.\n *      4.4 Tutorials should have an optional pixi container, and text split\n *          into paragraphs. Next button will display subsequent paragraphs\n *          until next slide with new pixi container.\n *      4.5 Pixi app should fill screen, and interface should be over-layed in\n *          an absolute positioned, full screen div\n * 5. On tutorial complete, run puzzle:\n *      5.1 Render grid and interface.\n *      5.2 Re-render grid on cell/candidate change, and check if grid complete.\n *      5.3 If grid complete, notify user.\n */ // Declare custom web components, and run miscellaneous setup functions.\ncustomElements.define(\"pixel-button\", (0, $dCg6x.PixelButton), {\n    extends: \"button\"\n});\ncustomElements.define(\"stateful-loading-container\", (0, $cQA11.StatefulLoadingContainer));\n(0, $318bce6d2393327c$export$491979a7c8fb2d1c)();\nconst $4a3ab828bb339d8b$var$nav = document.createElement(\"nav\");\n$4a3ab828bb339d8b$var$nav.classList.add(\"pixel-container\");\nconst $4a3ab828bb339d8b$var$signIn = new (0, $dCg6x.PixelButton)(\"Sign In\");\nconst $4a3ab828bb339d8b$var$signUp = new (0, $dCg6x.PixelButton)(\"Sign Up\");\n$4a3ab828bb339d8b$var$nav.append($4a3ab828bb339d8b$var$signIn, $4a3ab828bb339d8b$var$signUp);\nconst $4a3ab828bb339d8b$var$root = new (0, $cQA11.StatefulLoadingContainer)();\n$4a3ab828bb339d8b$var$root.id = \"root\";\n$4a3ab828bb339d8b$var$root.classList.add(\"pixel-container\");\ndocument.body.append($4a3ab828bb339d8b$var$nav, $4a3ab828bb339d8b$var$root);\nwindow.addEventListener(\"popstate\", (event)=>{\n    if (event && event.state) {\n        const { page: page } = event.state;\n        switch(page){\n            case \"home\":\n                (0, $8iDW5.runSelector)($4a3ab828bb339d8b$var$root);\n                break;\n            default:\n                (0, $8iDW5.runSelector)($4a3ab828bb339d8b$var$root);\n        }\n    }\n}); // @@no-exports\n\n})();\n//# sourceMappingURL=index.b5fd70fb.js.map\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Export custom web components.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@no-imports\n\n// @@no-body\n\n// @@exports\nexport * from \"./PixelButton.js\"\nexport * from \"./StatefulLoadingContainer.js\"\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Implement pixel button component.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@no-imports\n\n// @@body\nclass PixelButton extends HTMLButtonElement {\n    #text\n\n    /**\n     * @param {string} text\n     */\n    constructor(text) {\n        super()\n\n        this.#text = text\n    }\n\n    connectedCallback() {\n        const buttonText = document.createElement(\"p\")\n        buttonText.innerText = this.#text\n        const innerContainer = document.createElement(\"div\")\n        innerContainer.appendChild(buttonText)\n        this.appendChild(innerContainer)\n        this.classList.add(\"pixel-button\")\n    }\n}\n\n// @@exports\nexport { PixelButton }\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Implement basic stateful loading container web component.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@imports-dependencies\nimport { Boutique } from \"@blameitonyourisp/boutique\"\n\n// @@body\nclass StatefulLoadingContainer extends HTMLElement {\n    #loading = this.dataset.loading === \"false\" ? false : true\n    #store = new Boutique({})\n    #shallowRedaction = this.#store.createRedaction((state, detail) => {\n        Object.assign(state, detail)\n    })\n    #animation = {\n        keyframes: [{ opacity: 1 }, { opacity: 0 }],\n        options: { easing: \"ease-out\", duration: 300 },\n        reverse: { direction: /** @type {PlaybackDirection} */ (\"reverse\") }\n    }\n\n    constructor() { super() }\n\n    connectedCallback() {\n        if (!this.dataset.loading?.match(/^true$|^false$/)) {\n            this.dataset.loading = true.toString()\n        }\n\n        const loadingContainer = document.createElement(\"div\")\n        loadingContainer.classList.add(\"loading\", \"loading-container\")\n        const loadingText = document.createElement(\"p\")\n        loadingText.innerText = this.dataset.text || \"Loading...\"\n        const loadingBar = document.createElement(\"div\")\n        loadingBar.classList.add(\"pixel-container\", \"loading-bar\")\n        const loadingBounce = document.createElement(\"div\")\n        loadingBounce.classList.add(\"pixel-container\", \"loading-bounce\")\n        loadingBar.appendChild(loadingBounce)\n        loadingContainer.append(loadingText, loadingBar)\n\n        const contentContainer = document.createElement(\"div\")\n        contentContainer.classList.add(\"content\")\n\n        this.classList.add(\"stateful-loading-container\")\n        this.append(loadingContainer, contentContainer)\n    }\n\n    /**\n     *\n     * @param {HTMLElement} newContent\n     */\n    load(newContent) {\n        return new Promise(resolve => {\n            const { keyframes, options, reverse } = this.#animation\n\n            const replaceContent = () => {\n                this.contentContainer.replaceWith(newContent)\n                this.contentContainer\n                    .animate(keyframes, { ...options, ...reverse })\n                    .addEventListener(\"finish\", () => { resolve({}) })\n            }\n\n            if (this.loading) {\n                this.loadingContainer.animate(keyframes, options)\n                    .addEventListener(\"finish\", () => {\n                        this.loading = false\n                        replaceContent()\n                    })\n            }\n            else {\n                this.contentContainer.animate(keyframes, options)\n                    .addEventListener(\"finish\", replaceContent)\n            }\n        })\n    }\n\n    unload() {\n        return new Promise(resolve => {\n            if (this.loading) { resolve({}) }\n\n            const { keyframes, options, reverse } = this.#animation\n\n            this.contentContainer.animate(keyframes, options)\n                .addEventListener(\"finish\", () => {\n                    this.loading = true\n                    this.loadingContainer\n                        .animate(keyframes, { ...options, ...reverse })\n                        .addEventListener(\"finish\", () => { resolve({}) })\n                })\n        })\n    }\n\n    /**\n     * @param {any} detail\n     */\n    redact(detail) { this.#shallowRedaction(detail) }\n\n    get loading() { return this.#loading }\n\n    set loading(bool) {\n        this.dataset.loading = bool.toString()\n        this.#loading = bool\n    }\n\n    get loadingContainer() {\n        return this.getElementsByClassName(\"loading\")[0]\n    }\n\n    get contentContainer() {\n        return this.getElementsByClassName(\"content\")[0]\n    }\n\n    get createRedaction() {\n        return this.#store.createRedaction.bind(this.#store)\n    }\n\n    get createListener() {\n        return this.#store.createListener.bind(this.#store)\n    }\n\n    get addListener() {\n        return this.#store.addListener.bind(this.#store)\n    }\n\n    get removeListener() {\n        return this.#store.removeListener.bind(this.#store)\n    }\n\n    get state() { return this.#store.state }\n\n    static contentContainer() {\n        const container = document.createElement(\"div\")\n        container.classList.add(\"content\")\n\n        return container\n    }\n}\n\n// @@exports\nexport { StatefulLoadingContainer }\n","class e{constructor(e){this.evs={},this.state=e}createRedaction(e){return t=>{const{state:s,tracer:r}=this.proxy;this.redact(r,e(s,t))}}createListener(e){const{state:t,tracer:s}=this.proxy;return e(t),{func:s=>e(t,s)(),deps:s.map((e=>e.key))}}addListener(e){e.deps.forEach((t=>{this.evs[t]=[...this.evs[t]||[],e]}))}removeListener(e){e.deps.forEach((t=>{this.evs[t]=this.evs[t].filter((t=>t!==e))}))}redact(e,t,s=[]){e.forEach((e=>{if(e.value){let t=this.state;e.key.split(\".\").slice(1).reduce(((r,c,n,a)=>(n!==a.length-1?t=t[c]||{}:t[c]=e.value,r=`${r}.${c}`,s.push(...this.evs[r]||[]),r)),\"\")}})),[...new Set(s)].forEach((e=>e.func(t)))}handler(e,t=\"\"){return{get:(s,r)=>{const c=`${t}.${r}`;t&&c.includes(e[0].key)?e.splice(0,1,{key:c}):e.unshift({key:c});const n=s[r];return\"object\"!=typeof n?n:new Proxy(n,this.handler(e,c))},set:(s,r,c)=>!!e.push({key:`${t}.${r}`,value:c})}}get proxy(){const e=[];return{state:new Proxy(this.state,this.handler(e)),tracer:e}}}const t=e=>{const s={};for(const r in e)\"object\"==typeof e[r]?s[r]=t(e[r]):s[r]=e[r];return s};export{e as Boutique,t as proxyToObject};\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Run selector page.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@imports-package\nimport { PixelButton, StatefulLoadingContainer } from \"../components/index.js\"\n\n// @@body\n/**\n * @param {StatefulLoadingContainer} root\n */\nconst runSelector = root => {\n    const { dailyPuzzles } = root.state\n\n    const container = StatefulLoadingContainer.contentContainer()\n    for (const key in dailyPuzzles) {\n        const button = new PixelButton(key.toUpperCase())\n        button.addEventListener(\"click\", () => {\n            history.replaceState({ page: \"home\" }, \"\")\n            history.pushState({}, \"\")\n            root.redact({ serializedPuzzle: dailyPuzzles[key][0] })\n        })\n        container.appendChild(button)\n    }\n\n    root.load(container)\n}\n\n// @@exports\nexport { runSelector }\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Run Impostori SPA.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@imports-module\nimport { setHoverable } from \"./hoverable.js\"\n\n// @@imports-submodule\nimport { PixelButton, StatefulLoadingContainer } from \"./components/index.js\"\nimport { runSelector } from \"./selector/index.js\"\n\n// @@body\n/**\n * @todo Add completed puzzle site to itch.io.\n * @todo Add \"test\" and \"commit\"/\"revert\" buttons for testing a hypothesis about\n *      a candidate/cell.\n * @todo Add puzzle \"reset\" button.\n * @todo Add \"go home\" button to return to selector screen.\n * @todo Add timing feature to see how fast you can solve a puzzle.\n * @todo Add \"share\" button to share puzzle in current solve state.\n * @todo Add puzzle grade and rating to top nav.\n * @todo Add number of cells found/completed by type indicator.\n * @todo Add buttons to remove all candidates in a cell by type.\n * @todo Refactor _Puzzle to _Impostori method and state naming etc.\n * @todo Add state to loading container with redact method etc.\n * @todo Fix cyclical object bug on Boutique proxy to object feature (add\n *      tracker to detect cyclical object and resolve them).\n * @todo Add multiple radii to pixel container borders (add \"pixel-radius-x\"\n *      class styles).\n * @todo Update unload method to return a promise, then only render next page\n *      after unload is done. Promisify load method too on container.\n * @todo Include separate scripts, one to render the loading container, then one\n *      which loads pixi and starts the spritesheet import etc.\n * @todo Add bookmark and undo features to allow users to test and rollback.\n * @todo Add zoom ability to grid portion of pixi container.\n * @todo Remove root from stateful loading container (just target the container\n *      instead in css etc.).\n * @todo Add root div to html to which nav and loading container are appended?\n * @todo Change popstate listener to directly execute a function passed in the\n *      history state object.\n * @todo Add data to resolve object on load/unload methods in loading container.\n * @todo Remove direct calls to re-render puzzle by relying on state events\n *      instead.\n * @todo Add type declaration for \"complete\" root state.\n */\n\n/**\n * Steps:\n * 1. Run scripts to setup page and define custom web components.\n * 2. Declare Boutique store:\n *      2.1 Load spritesheet async and add to store with redaction.\n *      2.2 Load daily puzzles async and add to store with redaction.\n * 3. Select encoded puzzle string:\n *      3.1 Check url parameters for existing puzzle string to use by default.\n *      3.2 Check local storage for incomplete local puzzle, and add this to\n *          \"pick up where you left off\" option for this device.\n *      3.3 Update store to indicate that url params and local storage have been\n *          checked, and selector can be rendered.\n *      3.4 On daily puzzles loaded *and* url parameters checked, render list of\n *          daily puzzles, and wait for user to choose, then update store.\n *      3.5 Update impostori and encodedImpostori strings in store.\n * 4. On spritesheet loaded *and* encoded puzzle string chosen, run tutorial:\n *      4.1 Check local storage for if tutorial completed, if so set store value\n *          for tutorial complete.\n *      4.2 Otherwise render tutorial slide based on current active slide in\n *          store (default 0). Re-render on store update.\n *      4.3 Add buttons for \"skip\" and \"prev\"/\"next\" which update store current\n *          slide as required.\n *      4.4 Tutorials should have an optional pixi container, and text split\n *          into paragraphs. Next button will display subsequent paragraphs\n *          until next slide with new pixi container.\n *      4.5 Pixi app should fill screen, and interface should be over-layed in\n *          an absolute positioned, full screen div\n * 5. On tutorial complete, run puzzle:\n *      5.1 Render grid and interface.\n *      5.2 Re-render grid on cell/candidate change, and check if grid complete.\n *      5.3 If grid complete, notify user.\n */\n\n// Declare custom web components, and run miscellaneous setup functions.\ncustomElements.define(\"pixel-button\", PixelButton, { extends: \"button\" })\ncustomElements.define(\"stateful-loading-container\", StatefulLoadingContainer)\nsetHoverable()\n\nconst nav = document.createElement(\"nav\")\nnav.classList.add(\"pixel-container\")\nconst signIn = new PixelButton(\"Sign In\")\nconst signUp = new PixelButton(\"Sign Up\")\nnav.append(signIn, signUp)\n\nconst root = new StatefulLoadingContainer()\nroot.id = \"root\"\nroot.classList.add(\"pixel-container\")\n\ndocument.body.append(nav, root)\n\nwindow.addEventListener(\"popstate\", event => {\n    if (event && event.state) {\n        const { page } = event.state\n        switch (page) {\n            case \"home\":\n                runSelector(root)\n                break\n            default:\n                runSelector(root)\n        }\n    }\n})\n\n// @@no-exports\n","// Copyright (c) 2024 James Reid. All rights reserved.\n//\n// This source code file is licensed under the terms of the MIT license, a copy\n// of which may be found in the LICENSE.md file in the root of this repository.\n//\n// For a template copy of the license see one of the following 3rd party sites:\n//      - <https://opensource.org/licenses/MIT>\n//      - <https://choosealicense.com/licenses/mit>\n//      - <https://spdx.org/licenses/MIT>\n\n/**\n * @file Set body hoverable class for correctly rendering mobile buttons which\n *      have just been clicked.\n * @author James Reid\n */\n\n// @ts-check\n\n// @@no-imports\n\n// @@body\nconst setHoverable = () => {\n    let isTouchActive = false\n    const updateHoverable = () => {\n        isTouchActive ? document.body.classList.remove(\"hoverable\")\n            : document.body.classList.add(\"hoverable\")\n    }\n\n    document.addEventListener(\"touchstart\", () => {\n        // Activate touch then update hoverable class.\n        isTouchActive = true\n        updateHoverable()\n    })\n    document.addEventListener(\"mousemove\", () => {\n        // Update hoverable class *first* then disable touch in order to ignore\n        // emulated mousemove events dispatched after touchstart or touchend\n        // events.\n        updateHoverable()\n        isTouchActive = false\n    })\n\n    updateHoverable()\n}\n\n// @@exports\nexport { setHoverable }\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","PixelButton","StatefulLoadingContainer","$9e9b50f9e00dc78a$export$2e64f27de16040b1","HTMLButtonElement","text","constructor","connectedCallback","buttonText","document","createElement","innerText","innerContainer","appendChild","classList","add","$95a6474ac575cdaf$export$eba58f2af78a5ad3","$9c5Tu","HTMLElement","loading","dataset","store","Boutique","shallowRedaction","createRedaction","state","detail","assign","animation","keyframes","opacity","options","easing","duration","reverse","direction","match","toString","loadingContainer","loadingText","loadingBar","loadingBounce","append","contentContainer","load","newContent","Promise","resolve","replaceContent","replaceWith","animate","addEventListener","unload","redact","bool","getElementsByClassName","bind","createListener","addListener","removeListener","container","$6b19ce777cfcd843$export$5e986691550fc0c1","evs","t","tracer","r","proxy","func","deps","map","key","forEach","filter","value","split","slice","reduce","c","a","length","push","Set","handler","includes","splice","unshift","Proxy","$60aefb9e64f504fc$export$5f384e801479b4fc","$dCg6x","$cQA11","root","dailyPuzzles","button","toUpperCase","history","replaceState","page","pushState","serializedPuzzle","$8iDW5","customElements","define","extends","isTouchActive","updateHoverable","body","remove","$4a3ab828bb339d8b$var$nav","$4a3ab828bb339d8b$var$signIn","$4a3ab828bb339d8b$var$signUp","$4a3ab828bb339d8b$var$root","event","runSelector","setHoverable","nav","signIn","signUp"],"version":3,"file":"index.b5fd70fb.js.map"}